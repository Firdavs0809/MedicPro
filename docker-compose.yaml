version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    command: >
      sh -c "python manage.py migrate &&
             daphne -b 0.0.0.0 -p 8000 core.asgi:application"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - backend_net

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A core worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    networks:
      - backend_net

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_beat
    command: celery -A core beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    networks:
      - backend_net

  postgres:
    image: postgres:15-alpine
    container_name: postgres-2
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: medipro
      POSTGRES_PASSWORD: medipro_pass
      POSTGRES_DB: medipro_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medipro -d medipro_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_net

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend_net

volumes:
  postgres_data:

networks:
  backend_net:
    driver: bridge
